%% SG_scalarGradAtS
% Compute vertical gradients of a scalar at scalar levels
%
% Tristan Abbott // Massachusetts Institute of Technology // 11/14/2017
%
%%% Syntax
%   grad = SG_scalarGradAtS(grid, 's');
%
%%% Description
% Compute the vertical gradient at scalar levels of a quantity
% located at tracer cell centers. Gradients are computed with a centered
% finite different except at the top and bottom cells.
%
%%% Input Arguments
% *grid - SAM C-grid struct:*
% A struct containing grid information generated by SG_grid and fields
% added by SG_addVar.
%
% *s - name of quantity being differentiated:*
% String keys that can be used to look up the field for which the gradient
% is calculated.
%
%%% Output Arguments
%
% *grad - gradient:*
% #D array containing the vertical gradient of the field
function grad = SG_scalarGradAtW(grid, s)
    d = size(grid.(s));
    grad = zeros([d(1), d(2), d(3)]);
    grad(1,:,:) = (grid.(s)(2,:,:) - grid.(s)(1,:,:)) ./ ...
        (grid.z(2) - grid.z(1));
    grad(2:end-1,:,:) = (grid.(s)(3:end,:,:) - grid.(s)(1:end-2,:,:)) ./...
        (grid.z(3:end) - grid.z(1:end-2));
    grad(end,:,:) = (grid.(s)(end,:,:) - grid.(s)(end-1,:,:)) ./ ...
        (grid.z(end) - grid.z(end-1));
end
